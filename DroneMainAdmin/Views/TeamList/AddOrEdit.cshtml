@model DroneMainAdmin.Models.User
<h2 align="center">Detaile Form</h2>
@using (Html.BeginForm("AddOrEdit", "TeamList", FormMethod.Post, new { id = "dialog-alert" }))
{
    if (Model != null && Model.UserID > 0)
    {
        @Html.HiddenFor(a => a.UserID)
    }
    <div class="col-sm-12">
        <div class="contact-area" style="background-color:black">
            <div class="contact-form" style="margin-top:32px">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserID)

                <div class="form-group">
                    @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "notifyjs-center" })
                    </div>
                </div>

                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Middle Name" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Eamil ID" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-3 glyphicon glyphicon-phone-alt" })*@
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { type = "tel", @class = "intl-tel-input form-control", @id = "mobile-number", @placeholder = "eg. +91 9876543210" } })
                        <div class="col-md-11">
                            <span id="valid-msg" class="alert alert-success glyphicon glyphicon glyphicon-ok hide" role="alert">Valid</span>
                            <span id="error-msg" class="alert alert-danger glyphicon glyphicon glyphicon-exclamation-sign hide" role="alert">Invalid Number</span>
                        </div>
                    </div>
                </div><br />
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Team Name" } })
                        @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AddresL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Your Address Here" } })
                        @Html.ValidationMessageFor(model => model.AddresL, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    <div class="col-md-12">
                        @*@Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control", @placeholder = "eg. India" } })*@
                        @Html.DropDownListFor(model => model.CountryName, ViewBag.SelectValue as SelectList, "Select Country", new { @id = "idcountry", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @*<select id="St" class="form-control">

                            </select>*@
                        @if (ViewBag.StateSelect != null)
                        {
                            @Html.DropDownListFor(model => model.Provinance, ViewBag.StateSelect as SelectList, "Select State", new { @id = "state_id", @class = "form-control", @placeholder = "State/Provinance Name" })
                        }

                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control", @placeholder = "City Name" } })
                        @*@Html.DropDownListFor(model => model.CityName, ViewBag.CountryName as SelectList, "-- Select Country --", new { id = "idcountry", @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street Name" } })
                        @*@Html.DropDownListFor(model => model.CityName, ViewBag.CountryName as SelectList, "-- Select Country --", new { id = "idcountry", @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip/Pincode" } })
                        @*@Html.DropDownListFor(model => model.CityName, ViewBag.CountryName as SelectList, "-- Select Country --", new { id = "idcountry", @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @*@Html.LabelFor(model => model.Decscript, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Decscript, new { htmlAttributes = new { @class = "form-control", @placeholder = "Brief Intoduction About Self/Team", @cols = "20", @rows = "2" } })
                        @Html.ValidationMessageFor(model => model.Decscript, "", new { @class = "" })
                    </div>
                </div>

                <div class="col-md-1">
                    <br />
                    <label class="control-label checkbox" style="color:white">Accept T&C</label>
                    @*@Html.LabelFor(model => model.TermsAccepted, htmlAttributes: new { @class = "control-label checkbox", @style = "color:white" })*@
                    @Html.EditorFor(model => model.TermsAccepted)
                    @Html.ValidationMessageFor(model => model.TermsAccepted, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-2" style="margin-left:-104px;padding-left:120px;">
                    <br />
                    <label class="control-label checkbox" style="color:white;">Subscribe Letter</label>
                    @*@Html.LabelFor(model => model.SubEmail, htmlAttributes: new { @class = "control-label checkbox", @style = "color:white" })*@
                    @Html.EditorFor(model => model.SubEmail)
                    @Html.ValidationMessageFor(model => model.SubEmail, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-2 col-md-1">
                    <br />
                    <label class="control-label checkbox" style="color:white;">Admin Authorize</label>
                    @*@Html.LabelFor(model => model.TermsAccepted, htmlAttributes: new { @class = "control-label checkbox", @style = "color:white" })*@
                    @Html.EditorFor(model => model.AdminType)
                    @Html.ValidationMessageFor(model => model.AdminType, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <br />
                    <div class="col-md-8 col-sm-8" style="margin-bottom:25px;">
                        <input type="submit" value="SUBMIT" class="btn btn-lg btn-success" />
                    </div>
                    <div class="col-md-8 col-sm-8" style="margin-bottom:25px;">
                        <button id="cancel" class="btn btn-lg btn-danger">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="@Url.Content("/Scripts/intlTelInput.js")"></script>
    <script type="text/javascript">
                var telInput = $("#mobile-number"),
            errorMsg = $("#error-msg"),
            validMsg = $("#valid-msg");
                //initialise plugin
                telInput.intlTelInput({
                    utilsScript: "~/Scripts/utils.js"
                });

                //on blur: validate
                telInput.blur(function () {
                    if ($.trim(telInput.val())) {
                        if (telInput.intlTelInput("isValidNumber")) {
                            validMsg.removeClass("hide");
                            errorMsg.addClass('hide');
                        } else {
                            telInput.addClass("error");
                            errorMsg.removeClass("hide");
                            validMsg.addClass('hide');

                        }
                    }
                });

                //on Keydown: reset
                telInput.keydown(function () {
                    telInput.removeClass("error");
                    errorMsg.addClass("hide");
                    validMsg.addClass("hide")
                });

    </script>
    <script>
        $(document).ready(function () {
            $("#idcountry").change(function () {
                $.get("/User/GetStateById", { ID: $("#idcountry").val() }, function (data) {
                    $("#state_id").empty();
                    $.each(data, function (index, row) {
                        $("#state_id").append("<option value='" + row.state_id + "'>" + row.name + "</option>")
                    });
                })
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#cancel').change(function () {
                $(this).dialog('close');
            })
        })
    </script>
    }
    @*<script type="text/javascript">
            $("#mobile-number").intlTelInput();
        </script>*@
    
    

